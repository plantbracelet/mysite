{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"important/","title":"Important","text":"<p>\u91cd\u70b9\u5b9e\u9a8c</p>"},{"location":"important/#c","title":"C++\u7c7b\u548c\u5bf9\u8c61","text":""},{"location":"important/#1-3main","title":"1. \u5b9a\u4e49\u4e00\u4e2a\u5b66\u751f\u7c7b\uff0c\u5176\u4e2d\u67093\u4e2a\u6570\u636e\u6210\u5458\uff1a\u5b66\u53f7\u3001\u59d3\u540d\u3001\u5e74\u9f84\uff0c\u4ee5\u53ca\u82e5\u5e72\u6210\u5458\u51fd\u6570\u3002\u540c\u65f6\u7f16\u5199main\u51fd\u6570\uff0c\u4f7f\u7528\u8fd9\u4e2a\u7c7b\uff0c\u5b9e\u73b0\u5bf9\u5b66\u751f\u6570\u636e\u7684\u590d\u5236\u3001\u8d4b\u503c\u4e0e\u8f93\u51fa\u3002","text":"<p>\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing std::cout;\nusing std::endl;\n\nclass Student\n{\npublic:\n    Student(int id, int age, const char *name)\n    : _id(id)\n    , _age(age)\n    , _name(new char[strlen(name) + 1]())\n    {\n        strcpy(_name, name);\n    }\n    Student(const Student &amp;rhs)\n    : _id(rhs._id)\n    , _age(rhs._age)\n    , _name(new char[strlen(rhs._name) + 1]())\n    {\n        strcpy(_name, rhs._name);\n        cout &lt;&lt; \"\u62f7\u8d1d\u6784\u9020\u51fd\u6570\" &lt;&lt; endl;\n    }\n    /*\n     * \u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\n     * 1. \u8003\u8651\u81ea\u590d\u5236\u95ee\u9898\n     * 2. \u56de\u6536\u5de6\u64cd\u4f5c\u6570\u539f\u672c\u7533\u8bf7\u7684\u5806\u7a7a\u95f4\n     * 3. \u6df1\u62f7\u8d1d\uff08\u4ee5\u53ca\u5176\u4ed6\u7684\u6570\u636e\u6210\u5458\u7684\u590d\u5236\uff09\n     * 4. \u8fd4\u56de*this\n     * */\n    Student &amp;operator=(const Student &amp;rhs)\n    {\n        if(this != &amp;rhs){\n            if(_name){\n                delete []_name;\n            }\n            _name = new char[strlen(rhs._name) + 1]();\n            strcpy(_name, rhs._name);\n            _id = rhs._id;\n            _age = rhs._age;\n            cout &lt;&lt; \"\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\" &lt;&lt; endl;\n        }\n        return *this;\n    }\n    ~Student()\n    {\n        if(_name){\n            delete []_name;\n            _name = nullptr;\n        }\n        cout &lt;&lt; \"~Student()\" &lt;&lt; endl;\n    }\n    void print() const\n    {\n        cout &lt;&lt; \"id: \" &lt;&lt; _id &lt;&lt; endl\n             &lt;&lt; \"name: \" &lt;&lt; _name &lt;&lt; endl\n             &lt;&lt; \"age: \" &lt;&lt; _age &lt;&lt; endl;\n    }\nprivate:\n    int _id;\n    int _age;\n    char *_name;\n};\n\nint main()\n{\n    Student stu1(202401, 21, \"Zhang San\");\n    stu1.print();\n    Student stu2(stu1);\n    stu2.print();\n    Student stu3(202402, 19, \"Li Si\");\n    stu2 = stu3;\n    stu2.print();\n    return 0;\n}\n</code></pre>"},{"location":"important/#2-point","title":"2. \u5b9e\u73b0\u5355\u4f8b\u7684Point\u7c7b\uff08\u5c06\u5355\u4f8b\u5bf9\u8c61\u521b\u5efa\u5728\u5806\u4e0a\uff09","text":"<p>\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;iostream&gt;\nusing std::cout;\nusing std::endl;\n/*\n * \u5c06\u5355\u4f8b\u5bf9\u8c61\u521b\u5efa\u5728\u5806\u533a\n * 1. \u6784\u9020\u51fd\u6570\u79c1\u6709\n * 2. \u901a\u8fc7\u9759\u6001\u6210\u5458\u51fd\u6570getInstance\u521b\u5efa\u5806\u4e0a\u7684\u5bf9\u8c61\uff0c\u8fd4\u56dePoint*\u7c7b\u578b\u7684\u6307\u9488\n * 3. \u901a\u8fc7\u9759\u6001\u6210\u5458\u51fd\u6570\u5b8c\u6210\u5806\u5bf9\u8c61\u7684\u56de\u6536\n * */\nclass Point\n{\npublic:\n    static Point *getInstance()\n    {\n        if(_pInstance == nullptr){\n            _pInstance = new Point(1, 2);\n        }\n        return _pInstance;\n    }\n    void init(int x, int y)\n    {\n        _ix = x;\n        _iy = y;\n    }\n    static void destroy()\n    {\n        if(_pInstance){\n            delete _pInstance;\n            _pInstance = nullptr;\n        }\n        cout &lt;&lt; \"&lt;&lt;&lt;delete heap\" &lt;&lt; endl;\n    }\n    void print()\n    {\n        cout &lt;&lt; \"(\" &lt;&lt; this-&gt;_ix\n             &lt;&lt; \",\" &lt;&lt; this-&gt;_iy\n             &lt;&lt; \")\" &lt;&lt; endl;\n    }\nprivate:\n    Point(int x, int y)\n    : _ix(x)\n    , _iy(y)\n    {\n        cout &lt;&lt; \"Point(int,int)\" &lt;&lt; endl;\n    }\n    ~Point()\n    {\n        cout &lt;&lt; \"~Point()\" &lt;&lt; endl;\n    }\n    //C++11\u4e4b\u540e\u53ef\u4ee5\u5c06\u6210\u5458\u51fd\u6570\u4ece\u7c7b\u4e2d\u5220\u9664\n    Point(Point &amp;rhs) = delete;\n    Point &amp;operator=(const Point &amp;rhs) = delete;\nprivate:\n    int _ix;\n    int _iy;\n    //\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488\u4fdd\u5b58\u7b2c\u4e00\u6b21\u521b\u5efa\u7684\u5bf9\u8c61\n    static Point *_pInstance;\n};\nPoint *Point::_pInstance = nullptr;\nvoid test1()\n{\n    //\u5355\u4f8b\u5bf9\u8c61\u7684\u4f7f\u7528\u89c4\u8303\n    Point::getInstance()-&gt;init(1, 2);\n    Point::getInstance()-&gt;print();\n    Point::getInstance()-&gt;init(10, 20);\n    Point::getInstance()-&gt;print();\n    Point::destroy();\n}\nint main()\n{\n    test1();\n    return 0;\n}\n</code></pre> <p>\u7ed3\u679c\uff1a</p> <pre><code>Point(int,int)\n(1,2)\n(10,20)\n~Point()\n&lt;&lt;&lt;delete heap\n</code></pre>"},{"location":"important/#3-computer","title":"3. \u5b9e\u73b0\u4e00\u4e2a\u5355\u4f8b\u7684Computer\u7c7b\uff0c\u5305\u542b\u54c1\u724c\u548c\u4ef7\u683c\u4fe1\u606f\u3002","text":"<p>\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing std::cout;\nusing std::endl;\n\nclass Computer\n{\npublic:\n    static Computer * getInstance(){\n        if(_pInstance == nullptr){\n            _pInstance = new Computer(\"xiaomi\",5000);\n        }\n        return _pInstance;\n    }\n\n    void init(const char * brand,double price){\n        if(_brand){\n            delete [] _brand;\n        }\n        _brand = new char[strlen(brand) +1]();\n        strcpy(_brand,brand);\n        _price = price;\n    }\n\n    static void destroy(){\n        if(_pInstance){\n            delete _pInstance;\n            _pInstance = nullptr;\n        }\n        cout &lt;&lt; \"&lt;&lt;&lt;delete heap\" &lt;&lt; endl;\n    }\n\n    void print(){\n        cout &lt;&lt; \"brand:\" &lt;&lt; _brand &lt;&lt; endl;\n        cout &lt;&lt; \"price:\" &lt;&lt; _price &lt;&lt; endl;\n    }\nprivate:\n    Computer(const char * brand, double price)\n        : _brand(new char[strlen(brand) + 1]())\n          , _price(price)\n    {\n        cout &lt;&lt; \"Computer(const char *,double)\" &lt;&lt; endl;\n        strcpy(_brand, brand);\n    }\n\n    Computer(const Computer &amp; rhs) = delete;\n    Computer &amp; operator=(const Computer &amp; rhs) = delete;\n\n    ~Computer(){\n        if(_brand){\n            delete [] _brand;\n            _brand = nullptr;\n        }\n        cout &lt;&lt; \"~Computer()\" &lt;&lt; endl;\n    }\nprivate:\n    char * _brand;\n    double _price;\n    static Computer * _pInstance;\n};\nComputer * Computer::_pInstance = nullptr;\n\nvoid test1(){\n    Computer::getInstance()-&gt;init(\"Apple\", 15000);\n    Computer::getInstance()-&gt;print();\n    Computer::destroy();\n}\n\nint main()\n{\n    test1();\n    return 0;\n}\n</code></pre>"}]}